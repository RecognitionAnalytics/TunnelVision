<UserControl x:Class="TunnelVision.DataExplorerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:TunnelVision="clr-namespace:TunnelVision"
             xmlns:ViewModel="clr-namespace:TunnelVision.Controls.TreeViewModel"
             xmlns:TunnelConverters="clr-namespace:TunnelVision.Controls.Converters"
           MinHeight="400" >
    <UserControl.Resources>
        <SolidColorBrush x:Key="GlyphBrush" Color='White' />
        <ControlTemplate x:Key="toggleButtonTemplate" TargetType="ToggleButton">
            <Grid
            Width="20"
            Height="20"
            Background="Transparent" >
                <Path x:Name="ExpandPath"
              HorizontalAlignment="Left" 
              VerticalAlignment="Center" 
              Margin="1,1,1,1"
              Fill="{StaticResource GlyphBrush}"
              Data="M 4 0 L 8 4 L 4 8 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked"  Value="True">
                    <Setter Property="Data"    TargetName="ExpandPath"  Value="M 0 4 L 8 4 L 4 8 Z"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="toggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Template" Value="{StaticResource toggleButtonTemplate}" />
        </Style>

    </UserControl.Resources>
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="1"></RowDefinition>
            <RowDefinition Height="40*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" HorizontalAlignment="Stretch" Height="25" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Button x:Name="btnByDate" Click="btnByDate_Click" Grid.Column="0" Height="20">By Date</Button>
            <Button x:Name="btnByBatch" Click="btnByBatch_Click" Grid.Column="1" Height="20">By Batch</Button>
        </Grid>
        <ScrollViewer Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Left" CanContentScroll="True"
                   ScrollViewer.VerticalScrollBarVisibility="Visible" VerticalContentAlignment="Top" HorizontalContentAlignment="Left"
                   HorizontalScrollBarVisibility="Auto">
            <ScrollViewer.Resources>

                <DataTemplate DataType="{x:Type ViewModel:GridItems}">
                    <DataGrid ItemsSource="{Binding GItems}"
                          AutoGenerateColumns="False" SelectionUnit="FullRow" SelectionChanged="DataGrid_SelectionChanged"  
                          CanUserReorderColumns="True" CanUserResizeColumns="True"    CanUserResizeRows="True" CanUserSortColumns="True"
                          >
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Name" Width="Auto"  IsReadOnly="True" CanUserSort="true" SortMemberPath="DataTrace.TraceName">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataTrace.TraceName}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Analyte" Width="Auto" IsReadOnly="True" CanUserSort="true" SortMemberPath="DataTrace.Analyte">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataTrace.Analyte}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Time" Width="Auto" IsReadOnly="True" CanUserSort="true" SortMemberPath="DateAcquired">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DateAcquired}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Ionic" Width="Auto" IsReadOnly="True" CanUserSort="true" SortMemberPath="DataTrace.Format_Ionic_mV">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataTrace.Format_Ionic_mV}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Tunnel" Width="Auto" IsReadOnly="True" CanUserSort="true" SortMemberPath="DataTrace.Format_Tunnel_mV">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataTrace.Format_Tunnel_mV}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Top Reference" Width="Auto" IsReadOnly="True" CanUserSort="true" SortMemberPath="DataTrace.TopRef_mV_ToString">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataTrace.TopRef_mV_ToString}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Bottom Reference" Width="Auto" IsReadOnly="True" CanUserSort="true" SortMemberPath="DataTrace.BottomRef_mV_ToString">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataTrace.BottomRef_mV_ToString}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Tunnel Voltage" Width="Auto" IsReadOnly="True" CanUserSort="true" SortMemberPath="DataTrace.Tunnel_mV_ToString">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataTrace.Tunnel_mV_ToString}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DataTemplate>

                <DataTemplate DataType="{x:Type ViewModel:DataTraceVM}">
                    <StackPanel Orientation="Horizontal"  MouseDown="StackPanel_MouseDown"  MouseEnter="StackPanel_MouseEnter" MouseLeave="StackPanel_MouseLeave">
                        <Rectangle x:Name="rect"  Height="20" Width="20" Fill="{Binding GoodColor}"  ></Rectangle>
                        <TextBlock Text="{Binding DisplayTitle}" ></TextBlock>
                    </StackPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type ViewModel:IVTraceVM}">
                    <StackPanel Orientation="Horizontal"  MouseDown="StackPanel_MouseDown"  MouseEnter="StackPanel_MouseEnter" MouseLeave="StackPanel_MouseLeave">
                        <Rectangle x:Name="rect"  Height="20" Width="20" Fill="{Binding GoodColor}"  ></Rectangle>
                        <TextBlock Text="{Binding}" ></TextBlock>
                    </StackPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type ViewModel:TraceFolderVM}">
                    <StackPanel HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton IsChecked="{Binding OpenList}" Height="20" Width="20" Style="{StaticResource toggleButtonStyle}" Foreground="White"  ></ToggleButton>
                            <TextBlock Text="{Binding }"  MouseDown="TextBlock_MouseDown"   MouseEnter="TextBlock_MouseEnter" MouseLeave="TextBlock_MouseLeave"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation ="Horizontal" HorizontalAlignment="Stretch" Visibility="{Binding ListOpen}">
                            <TextBlock Text="        "></TextBlock>
                            <ListBox   ItemsSource="{Binding Children}" HorizontalAlignment="Stretch"  MinWidth="400">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <EventSetter Event="PreviewMouseRightButtonDown" Handler="OnListViewItemPreviewMouseRightButtonDown" />
                                    </Style>
                                </ListBox.ItemContainerStyle>



                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete" Click="MenuItem_Click"></MenuItem>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                            </ListBox>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type ViewModel:FolderVM}">
                    <StackPanel HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton IsChecked="{Binding OpenList}" Height="20" Width="20" Style="{StaticResource toggleButtonStyle}" Foreground="White" ></ToggleButton>
                            <TextBlock Text="{Binding }"  MouseDown="TextBlock_MouseDown"  MouseEnter="TextBlock_MouseEnter" MouseLeave="TextBlock_MouseLeave"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Visibility="{Binding ListOpen}">
                            <TextBlock Text="      "></TextBlock>
                            <ListBox   ItemsSource="{Binding Children}" HorizontalAlignment="Stretch"  MinWidth="400">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <EventSetter Event="PreviewMouseRightButtonDown"
						 Handler="OnListViewItemPreviewMouseRightButtonDown" />
                                    </Style>
                                </ListBox.ItemContainerStyle>

                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete" Click="MenuItem_Click"></MenuItem>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                            </ListBox>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type ViewModel:IVFolderVM}">
                    <StackPanel HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton IsChecked="{Binding OpenList}" Height="20" Width="20" Style="{StaticResource toggleButtonStyle}" Foreground="White" ></ToggleButton>
                            <TextBlock Text="{Binding }"  MouseDown="TextBlock_MouseDown" MouseEnter="TextBlock_MouseEnter" MouseLeave="TextBlock_MouseLeave"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Visibility="{Binding ListOpen}">
                            <TextBlock Text="            "></TextBlock>
                            <ListBox   ItemsSource="{Binding Children}" HorizontalAlignment="Stretch"  MinWidth="400"  >
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <EventSetter Event="PreviewMouseRightButtonDown"
						 Handler="OnListViewItemPreviewMouseRightButtonDown" />
                                    </Style>
                                </ListBox.ItemContainerStyle>



                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete" Click="MenuItem_Click"></MenuItem>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                            </ListBox>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type ViewModel:JunctionVM}">
                    <StackPanel HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton IsChecked="{Binding OpenList}" Height="20" Width="20" Style="{StaticResource toggleButtonStyle}" Foreground="White" ></ToggleButton>
                            <StackPanel Orientation="Horizontal"  MouseDown="StackPanel_MouseDown"  MouseEnter="StackPanel_MouseEnter" MouseLeave="StackPanel_MouseLeave">
                                <TextBlock Text="{Binding }"  ></TextBlock>
                                <Rectangle x:Name="rect"  Height="20" Width="20" Fill="{Binding GoodColor}"  ></Rectangle>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Visibility="{Binding ListOpen}" HorizontalAlignment="Left" Orientation="Horizontal">
                            <Button Height="15" Command="{Binding ArrangeByCondition}">Cond.</Button>
                            <Button Height="15" Command="{Binding ArrangeByAnalyte}">Analyte</Button>
                            <Button Height="15" Command="{Binding ArrangeByTime}">Time</Button>
                            <Button Height="15" Command="{Binding ArrangeByGrid}">Grid</Button>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Visibility="{Binding ListOpen}">
                            <TextBlock Text="      "></TextBlock>
                            <ListBox   ItemsSource="{Binding Children}" HorizontalAlignment="Stretch"  MinWidth="400"  >
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <EventSetter Event="PreviewMouseRightButtonDown"
						 Handler="OnListViewItemPreviewMouseRightButtonDown" />
                                    </Style>
                                </ListBox.ItemContainerStyle>

                            </ListBox>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type ViewModel:ChipVM}">
                    <StackPanel HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal"  >
                            <ToggleButton IsChecked="{Binding OpenList}" Height="20" Width="20" Style="{StaticResource toggleButtonStyle}" Foreground="White" ></ToggleButton>
                            <StackPanel Orientation="Horizontal"  MouseDown="StackPanel_MouseDown"  MouseEnter="StackPanel_MouseEnter" MouseLeave="StackPanel_MouseLeave">
                                <TextBlock Text="{Binding}" MouseDown="TextBlock_MouseDown_1" ></TextBlock>
                                <Rectangle x:Name="rect"  Height="20" Width="20" Fill="{Binding GoodColor}"  ></Rectangle>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Visibility="{Binding ListOpen}">
                            <TextBlock Text="      "></TextBlock>
                            <ListBox   ItemsSource="{Binding Children}" HorizontalAlignment="Stretch"  MinWidth="400">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <EventSetter Event="PreviewMouseRightButtonDown"
						 Handler="OnListViewItemPreviewMouseRightButtonDown" />
                                    </Style>
                                </ListBox.ItemContainerStyle>



                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete" Click="MenuItem_Click"></MenuItem>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                            </ListBox>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type ViewModel:BatchVM}">
                    <StackPanel HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton IsChecked="{Binding OpenList}" Height="20" Width="20" Style="{StaticResource toggleButtonStyle}" Foreground="White" ></ToggleButton>
                            <TextBlock Text="{Binding }"  MouseDown="TextBlock_MouseDown"  MouseEnter="TextBlock_MouseEnter" MouseLeave="TextBlock_MouseLeave"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Visibility="{Binding ListOpen}">
                            <TextBlock Text="      "></TextBlock>
                            <ListBox   ItemsSource="{Binding Children}" HorizontalAlignment="Stretch"  MinWidth="400" >
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <EventSetter Event="PreviewMouseRightButtonDown"						 Handler="OnListViewItemPreviewMouseRightButtonDown" />
                                    </Style>
                                </ListBox.ItemContainerStyle>

                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete" Click="MenuItem_Click"></MenuItem>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                            </ListBox>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type ViewModel:ExperimentVM}">
                    <StackPanel HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton IsChecked="{Binding OpenList}" Height="20" Width="20" Style="{StaticResource toggleButtonStyle}" Foreground="White" ></ToggleButton>
                            <TextBlock Text="{Binding }"  MouseDown="TextBlock_MouseDown"  MouseEnter="TextBlock_MouseEnter" MouseLeave="TextBlock_MouseLeave"></TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Visibility="{Binding ListOpen}">
                            <TextBlock Text="      "></TextBlock>
                            <ListBox   ItemsSource="{Binding Children}" MinWidth="400">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <EventSetter Event="PreviewMouseRightButtonDown"
						 Handler="OnListViewItemPreviewMouseRightButtonDown" />
                                    </Style>
                                </ListBox.ItemContainerStyle>



                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Delete" Click="MenuItem_Click"></MenuItem>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                            </ListBox>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>

            </ScrollViewer.Resources>

            <ListBox ItemsSource="{Binding Path=Experiments}" VerticalAlignment="Stretch"  VerticalContentAlignment="Top"  >
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Focusable" Value="False"/>
                        <EventSetter Event="PreviewMouseRightButtonDown"
						 Handler="OnListViewItemPreviewMouseRightButtonDown" />
                    </Style>
                </ListBox.ItemContainerStyle>



                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Delete" Click="MenuItem_Click"></MenuItem>
                        <MenuItem Header="Make Graphs" Click="GraphItem_Click"></MenuItem>
                    </ContextMenu>
                </ListBox.ContextMenu>

            </ListBox>


        </ScrollViewer>

    </Grid>
</UserControl>
